
import java.sql.*;
import java.net.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Karan
 */
public class server extends javax.swing.JFrame {

    /**
     * Creates new form server
     */
    public server() {
        initComponents();
        this.setVisible(true);
        this.setSize(500, 500);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        bt.setText("Start");
        bt.setRequestFocusEnabled(false);
        bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActionPerformed(evt);
            }
        });
        getContentPane().add(bt);
        bt.setBounds(150, 150, 120, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActionPerformed
        myserver ms = new myserver();
        Thread th1 = new Thread(ms);
        th1.start();
    }//GEN-LAST:event_btActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new server().setVisible(true);
            }
        });
    }

    class myserver implements Runnable {

        @Override
        public void run() {
            try {
                ServerSocket sersock = new ServerSocket(9000);
                System.out.println("Server started");

                while (true) {

                    Socket sock = sersock.accept();
                    System.out.println("Connected");
                    mclient mc1 = new mclient(sock);
                    Thread th2 = new Thread(mc1);
                    th2.start();

                }

            } catch (Exception e) {

            }

        }

        class mclient implements Runnable {

            Socket sock;
            DataInputStream dis;
            DataOutputStream dos;

            mclient(Socket sock) {

                try {
                    this.sock = sock;
                    dis = new DataInputStream(sock.getInputStream());
                    dos = new DataOutputStream(sock.getOutputStream());
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            }

            @Override
            public void run() {
                try {
                    String s = dis.readLine();
                    System.out.println(s);
                    if (s.equals("LOGIN REQUEST")) {
                        String u = dis.readLine();
                        String p = dis.readLine();
                        Class.forName("com.mysql.jdbc.Driver");
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from user where Username='" + u + "' and Password='" + p + "'");
                        if (rs.next()) {
                            dos.writeBytes("sucess\r\n");
                        } else {
                            dos.writeBytes("Fail\r\n");
                        }

                    } else if (s.equals("CHANGE PASSWORD REQUEST")) {
                        String us = dis.readLine();
                        String op = dis.readLine();
                        String np = dis.readLine();
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from user where Username='" + us + "' and Password='" + op + "'");
                        if (rs.next()) {
                            rs.updateString("password", np);
                            rs.updateRow();
                            dos.writeBytes("success\r\n");
                        } else {
                            dos.writeBytes("fail\r\n");
                        }

                    } else if (s.equals("SIGNUP REQUEST")) {
                        String u = dis.readLine();
                        String p = dis.readLine();
                        String e = dis.readLine();
                        String ph = dis.readLine();
                        String g = dis.readLine();

                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from user where Username='" + u + "'");

                        if (rs.next()) {
                            dos.writeBytes("already exist\r\n");
                        } else {
                            dos.writeBytes("send photo\r\n");
                            long size = dis.readLong();
                            FileOutputStream fos = new FileOutputStream("E:\\my downloads\\" + u + ".jpg");

                            long count = 0;
                            int r;
                            byte b[] = new byte[10000];

                            while (true) {
                                r = dis.read(b, 0, b.length);
                                count = count + r;
                                System.out.println(r);
                                if (r == -1) {
                                    break;
                                }
                                fos.write(b, 0, r);
                                if (count == size) {
                                    break;
                                }
                            }
                            fos.close();
                            dos.writeBytes("filesuccess\r\n");
                            rs.moveToInsertRow();
                            rs.updateString("Username", u);
                            rs.updateString("password", p);
                            rs.updateString("Email", e);
                            rs.updateString("Phonenumber", ph);
                            rs.updateString("Gender", g);

                            rs.updateString("Photo", "E:\\my downloads\\" + u + ".jpg");
                            rs.insertRow();
                        }

                    } else if (s.equals("SEARCH REQUEST")) {
                        String key = dis.readLine();
                        String u = dis.readLine();

                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from user where Username like '%" + key + "%'");
                        while (rs.next()) {
                            String User = rs.getString("Username");
                            String mail = rs.getString("Email");
                            dos.writeBytes(User + "\r\n");
                            dos.writeBytes(mail + "\r\n");
                            Statement stmt1 = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                            System.out.println("Statement Created");
                            ResultSet rs1 = stmt1.executeQuery("select * from Follow where username ='" + u + "' and followto='" + User + "'");

                            if (rs1.next()) {
                                dos.writeBytes("followed\r\n");
                            } else {
                                dos.writeBytes("follow\r\n");

                            }
                        }
                        dos.writeBytes("done\r\n");

                    } else if (s.equals("FOLLOW FRIEND REQUEST")) {
                        String u1 = dis.readLine();
                        String u2 = dis.readLine();

                        ////////////////
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from Follow where username ='" + u1 + "' and followto='" + u2 + "'");
                        if (rs.next()) {
                            dos.writeBytes("fail\r\n");
                        } else {
                            rs.moveToInsertRow();
                            rs.updateString("username", u1);
                            rs.updateString("followto", u2);
                            rs.insertRow();
                            dos.writeBytes("success\r\n");

                        }

                    } else if (s.equals("SEND FOLLOWING REQUEST")) {
                        String u = dis.readLine();
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from Follow where username='" + u + "'");

                        while (rs.next()) {
                            String fn = rs.getString("followto");
                            dos.writeBytes(fn + "\r\n");
                        }
                        dos.writeBytes("done\r\n");
                    } else if (s.equals("UNFOLLOW FRIEND REQUEST")) {
                        String u1 = dis.readLine();
                        String u2 = dis.readLine();
                        System.out.println(u1 + "   " + u2);
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from Follow where username='" + u1 + "' and followto='" + u2 + "'");

                        if (rs.next()) {
                            rs.deleteRow();
                            dos.writeBytes("unfollow success\r\n");
                        } else {
                            System.out.println("fail");
                        }

                    } else if (s.equals("SHOW FOLLOWERS")) {
                        String u = dis.readLine();
                        System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from Follow where followto='" + u + "'");

                        while (rs.next()) {
                            String fn = rs.getString("username");
                            dos.writeBytes(fn + "\r\n");
                        }
                        dos.writeBytes("done\r\n");
                    }
                    else if(s.equals("POST STORY"))
                    {
                     String t= dis.readLine();
                     
                     /////////////////
                      long size = dis.readLong();
                            FileOutputStream fos = new FileOutputStream("E:\\my downloads\\Story\\" +Math.random() + ".jpg");

                            long count = 0;
                            int r;
                            byte b[] = new byte[10000];

                            while (true) {
                                r = dis.read(b, 0, b.length);
                                count = count + r;
                                System.out.println(r);
                                if (r == -1) {
                                    break;
                                }
                                fos.write(b, 0, r);
                                if (count == size) {
                                    break;
                                }
                            }
                            fos.close();
                            

                     ////////////////
                      System.out.println("Driver Loading done");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test", "root", "system");
                        System.out.println("Connection Created");
                        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs = stmt.executeQuery("select * from Story");
                        
                        rs.moveToInsertRow();
                        rs.updateString("title", t);
                        rs.updateString("photo", "E:\\my downloads\\Story\\" +Math.random() + ".jpg");
                        rs.insertRow();

                           Statement stmt1 = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        System.out.println("Statement Created");
                        ResultSet rs1 = stmt1.executeQuery("select MAX(sid) from Story");
                        rs1.next();
                        int sid=rs1.getInt(1);
                        
                        dos.writeBytes(sid+"\r\n");
                        dos.writeBytes("success\r\n");
                        
                    }

                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt;
    // End of variables declaration//GEN-END:variables
}
